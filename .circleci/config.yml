version: 2.1

jobs:
  test:
    docker:
      # We use node-browsers because we will implement E2E test in this project
      - image: circleci/node:14-browsers

    working_directory: ~/repo

    steps:
      # Checkout code from repository to working dir
      - checkout

      # Restore cache if exist
      - restore_cache:
          keys:
            - writedown-{{ checksum "package.json" }}
            - writedown-

      - run:
          name: Install the packages
          command: yarn install

      # Save cache with corresponding key
      - save_cache:
          paths:
            - node_modules
            - ~/.npm
            - ~/.cache
          key: writedown-{{ checksum "package.json" }}

      - run:
          name: Lint the project source files
          command: yarn lint

      - run:
          name: Test the project
          command: yarn test

  build:
    docker:
      - image: circleci/node:14

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - writedown-{{ checksum "package.json" }}
            - writedown-

      - run:
          name: Install the packages
          command: yarn install

      - save_cache:
          paths:
            - node_modules
            - ~/.npm
            - ~/.cache
          key: writedown-{{ checksum "package.json" }}

      - run:
          name: Build the project
          command: yarn build

      - persist_to_workspace:
          root: ./build
          paths:
            - ./*

  gh-pages-deploy:
    docker:
      - image: circleci/node:14

    working_directory: ~/repo

    steps:
      - checkout

      - attach_workspace:
          at: ./build

      - run:
          name: Install and configure gh-pages dependency
          command: |
            sudo npm install --global --save-dev --silent gh-pages
            git config user.email "arvianto.dwi@gmail.com"
            git config user.name "Arvianto Dwi"

      - run:
          name: Deploy project to gh-pages
          command: gh-pages --dist ./build

workflows:
  main:
    jobs:
      - test:
          filters:
            branches:
              ignore: gh-pages
      - build:
          requires:
            - test
          filters:
            branches:
              only: master
      - gh-pages-deploy:
          requires:
            - test
            - build
          filters:
            branches:
              only: master
